#安装库
if(!require(foreign))install.packages('foreign')
if(!require(haven))install.packages('haven')
if(!require(dplyr))install.packages('dplyr')
if(!require(purrr))install.packages('purrr')
if(!require(lubridate))install.packages('lubridate')
if(!require(readxl))install.packages('readxl')
if(!require(tableone))install.packages('tableone')
#加载库
library(foreign)
library(haven)
library(dplyr)
library(purrr)
library(lubridate)
library(readxl)
library(tableone)

#1.数据提取
#手写代码可以提取想要的变量
#charls2011原始合集 <- readRDS("D:/BaiduNetdiskDownload/charls开源2(1)/charls2011原始合集.RDS")
#自命名文件名 <- read格式("文件地址.格式")[,c('变量1','变量2')]
#1.必须以字母或下划线开头。
#2.后续字符可以是字母、数字或下划线 。
#3.不能包含特殊字符（如空格、标点符号等，除了下划线 ）

#如果文件在设置的地址里，直接输入文件名即可，例如本次Set working directory设置在D:/BaiduNetdiskDownload/charls开源2(1)，直接charls2011原始合集 <- readRDS("charls2011原始合集.RDS")
charls2011原始合集 <- readRDS("charls2011原始合集.RDS")[,c('ID')]

#提取需要的变量
#individual ID
#householdID
#communityID
#rgender
#年龄，年月日，ba002_1,ba002_2,ba002_3
#户口，place,bc001
#教育，bd001
#婚姻状况，be001

D_demo <- readRDS("charls2011原始合集.RDS")[,c('ID','rgender','ba002_1','ba002_2','ba002_3','bc001','bd001','be001')]

#计算年龄
#$符号可以用于创建新列，前提是作用对象为数据框
#d_demo$ba002_1 、d_demo$ba002_2 、d_demo$ba002_3 先分别提取数据框d_demo 中对应列的数据，再通过paste函数将其合并，最后用as.Date函数转换为日期格式，并将结果存储到d_demo 的birth 列中（若原本不存在birth 列，则会新建 ）。
D_demo$birth <- as.Date(paste(D_demo$ba002_1,D_demo$ba002_2,D_demo$ba002_3,sep='-'))
table(D_demo$ba002_1,useNA = 'ifan')

#使用Environment中的Data
D_demo2 <- charls2011_combined_with_list3_clean %>% select('id','rgender','ba002_1','ba002_2','ba002_3','bc001','bd001','be001')

#计算年龄
#月.日为零时，算1
#==而不是=
D_demo2$ba002_2[D_demo2$ba002_2==0] <-1
D_demo2$ba002_3[D_demo2$ba002_3==0] <-1
#month=2,day=30或29时，将day=28
D_demo2$ba002_3[D_demo2$ba002_2==2 & (D_demo2$ba002_3==30|D_demo2$ba002_3==29)] <-28
#组合年月日
D_demo2$birth <- as.Date(paste(D_demo2$ba002_1,D_demo2$ba002_2,D_demo2$ba002_3,sep='-'))

table(D_demo2$ba002_1,useNA = 'ifan') #54
table(D_demo2$ba002_2,useNA = 'ifan') #54
table(D_demo2$ba002_3,useNA = 'ifan') #54
#Table列联表用来汇总和展示数据的频数分布情况，重复数少时比建议使用
#
d1<- subset(D_demo2, is.na(D_demo2$birth))
nrow(d1) #1017，#54

#年龄
D_demo2$Age<-round(difftime('2013-3-12',D_demo2$birth)/365)
#去掉day
D_demo2$Age<-as.numeric(gsub("\\D","",D_demo2$Age))
#删除不需要的列
D_demo2<- subset(D_demo2,select = -c(ba002_1,ba002_2,ba002_3,birth))

#列名变更
D_demo2<-plyr::rename(D_demo2,c(rgender='gender',bc001='place',bd001='education',be001='marriage'))
table(D_demo2$place,useNA='ifan') #32

# 提取数据框
health_data <- charls2011_list$health_status_and_functioning

#表2，健康状况
#吸烟，da059；喝酒，da067；失眠，dc015；抑郁，dc011；中风，da007_8_
D_health <- health_data %>% select('ID','da059','da067','dc015','dc011','da007_8_')

table(D_health$da059,useNA = 'ifan') #37
table(D_health$da067,useNA = 'ifan') #44
table(D_health$dc015,useNA = 'ifan') #1605
table(D_health$dc011,useNA = 'ifan') #1736
table(D_health$da007_8_,useNA = 'ifan') #70

#列名变更
D_health<-plyr::rename(D_health,c(da059='smoke',da067='drink',dc015='sleep less',dc011='depression',da007_8_='stroke'))

#表3，体检数据
#ID,身高，体重
D_biom<-charls2011_list[["biomarkers"]][,c('ID','qi002','ql002')]

#BMI:BMI=weight_kg/(height_m**2)
D_biom$BMI<-round(D_biom$ql002/(D_biom$qi002/100)**2,2)
table(D_biom$qi002,useNA = 'ifan') #246
table(D_biom$ql002,useNA = 'ifan') #265
d1<-subset(D_biom, is.na(D_biom$BMI))

#删除不需要的列
D_biom<-subset(D_biom,select=-c(ql002,qi002))


#表4，Blood_20140429 血检数据
#ID ,HDL newhdl,LDL newldl,TC newcho,TG newtg,FPG newglu
D_blood<-charls2011_list[["blood"]][,c('ID','newhdl','newldl','newcho','newtg','newglu')]

#TYG指数计算
D_blood$TYG<-round(log(D_blood$newtg*D_blood$newglu/2),2)
d1<-subset(D_blood, is.na(D_blood$TYG)) #211

#列名变更
D_blood<-plyr::rename(D_blood,c(newhdl='HDL',newldl='LDL',newcho='TC',newtg='tg',newglu='FPG'))
D_demo2<-plyr::rename(D_demo2,c(id='ID'))

#1.2 数据合并
#LEFT_join 向左合并
D1 <- left_join(D_demo2,D_health,by=c('ID'))
D2 <- left_join(D1,D_biom,by=c('ID'))
D <- left_join(D2,D_blood,by=c('ID'))

#保存数据
write.csv(D,'..\\d_raw.csv')

#下次直接从这里开始
D<-read.csv('..\\d_raw.csv')[-1]




#2数据清洗--------------------
#2.1 数据纳排
nrow(D) #17705
#(1)暴露因素，Tyg指数
D<-subset(D, !is.na(D$TYG))
17705-11636 #6069

#(2)结局变量，中风
D<-subset(D, !is.na(D$stroke))
11636-11557 #79
D$stroke[D$stroke==1]<-'stroke'
D$stroke[D$stroke==2]<-'non-stroke'
D$stroke<-factor(D$stroke,levels = c('stroke','non-stroke'))
table(D$stroke,useNA = 'ifan')

#(3)协变量 gender+Age+Education+place+marriage+smoke+drink+sleepless+depression+BMI+HDL+LDL+TC
#GENDER
D$gender[D$gender==1]<-'male'
D$gender[D$gender==2]<-'female'
D$gender<-factor(D$gender,levels = c('male','female'))

class(D$gender)
D$gender <- as.double(D$gender)

table(D$gender,useNA='ifan') #9

#教育,分为below high school和high school or above
D$education2[D$education<=5]<-'below high school'
D$education2[D$education>5]<-'high school or above'
D$education2<-factor(D$education2,levels = c('below high school','high school or above'))

table(D$education2,useNA='ifan') #10

class(D$education)
D$education <- as.double(D$education)
sum(is.na(D$education)) 
sum(is.na(D$gender))
sum(is.na(D$stroke))
D$education[is.na(D$education)] <- 0

#婚姻，在婚，未婚
D$marriage2[D$marriage<=2]<-'yes'
D$marriage2[D$marriage>2]<-'no'
D$marriage2<-factor(D$marriage2,levels = c('yes','no'))
table(D$marriage2,useNA='ifan') #0

#户口，分为agricultual,non-agricultual
D$place2[D$place==1]<-'agricultual'
D$place2[D$place==2]<-'non-agricultual'
D$place2<-factor(D$place2,levels = c('agricultual','non-agricultual'))
table(D$place2,useNA='ifan') #58

#吸烟，yes no
D$smoke2[D$smoke==1]<-'yes'
D$smoke2[D$smoke==2]<-'no'
D$smoke2<-factor(D$smoke2,levels = c('yes','no'))
table(D$smoke2,useNA='ifan') #5

#喝酒,>=1 time a month ,<1 time a month
D$drink3[D$drink==1]<-'>=1 time a month'
D$drink3[D$drink==2]<-'<1 time a month'
D$drink3[D$drink==3]<-'none'
D$drink3<-factor(D$drink3,levels = c('>=1 time a month','<1 time a month','none'))
table(D$drink3,useNA='ifan') #7

as.character(D$drink3)

#sleepless,mild,moderate,heavy
D$sleep.less3[D$sleep.less==1]<-'mild'
D$sleep.less3[D$sleep.less==2]<-'moderate'
D$sleep.less3[D$sleep.less==3]<-'moderate'
D$sleep.less3[D$sleep.less==4]<-'heavy'
D$sleep.less3<-factor(D$sleep.less3,levels = c('mild','moderate','heavy'))
table(D$sleep.less3,useNA='ifan') #595

#使用ifelse函数
D$sleep.less4 <- NA
D$sleep.less4 <- ifelse(D$sleep.less %in% c(2, 3),'moderate',
                       ifelse(D$sleep.less == 1,'mild',
                              ifelse(D$sleep.less == 4, 'heavy', D$sleep.less4)))
D$sleep.less4 <- factor(D$sleep.less4, levels = c('mild','moderate', 'heavy'))

D <- D %>% select(-sleep.less4) #删除列

#抑郁，mild,moderate,heavy
D$depression3 <- NA
D$depression3 <- ifelse(D$depression %in% c(2, 3),'moderate',
                        ifelse(D$depression == 1,'mild',
                               ifelse(D$depression == 4, 'heavy', D$depression3)))
D$depression3 <- factor(D$depression3, levels = c('mild','moderate', 'heavy'))
table(D$depression3,useNA='ifan') #688

D<-subset(D,!is.na(D$gender)&!is.na(D$Age)&!is.na(D$education2)&!is.na(D$place)&!is.na(D$marriage2)&!is.na(D$smoke2)&!is.na(D$drink3)&!is.na(D$sleep.less3)&!is.na(D$depression3)&!is.na(D$BMI)&!is.na(D$HDL)&!is.na(D$LDL)&!is.na(D$place2)&!is.na(D$TC)&!is.na(D$gender)&!is.na(D$gender))
#11557-9424=2133

# 检查是否存在缺失值
has_na <- any(is.na(D))
if (has_na) {print("数据框中存在缺失值。")} else {print("数据框中不存在缺失值。")}
          
#2.2基线分析 
#结局变量
str(D)
var<-c('gender','Age','place2','education2','marriage2','smoke2','drink3','sleep.less3','depression3','BMI','HDL','LDL','TC','tg','TYG')
t1<-CreateTableOne(vars = var,strata=c('stroke'),data=D)
print(t1,showAllLevels = TRUE,nonnormal = '',smd = F)|>write.csv('..\\Table 1 基线分析.csv')

#暴露因素
D$TYG4<-cut(D$TYG,breaks = 4,labels = c('Q1','Q2','Q3','Q4'))

quantile(D$TYG)

D$TYG <- as.numeric(D$TYG)
D$TYG5[D$TYG<=8.23]<-'<= 8.23'
D$TYG5[D$TYG> 8.23 & D$TYG<=8.60]<- '8.23-8.60'
D$TYG5[D$TYG> 8.60 & D$TYG<=9.06]<- '8.60-9.06'
D$TYG5[D$TYG> 9.06]<- '> 9.06'
table(D$TYG5)

var<-c('gender','Age','place2','education2','marriage2','smoke2','drink3','sleep.less3','depression3','BMI','HDL','LDL','TC','tg','stroke')
t1<-CreateTableOne(vars = var,strata=c('TYG5'),data=D)
print(t1, showAllLevels = TRUE, nonnormal = '', smd = F, quote = FALSE)|>write.csv('..\\Table 1 基线分析2.csv')
